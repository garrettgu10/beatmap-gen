(self.webpackChunkwebpack_starter=self.webpackChunkwebpack_starter||[]).push([[122],{656:function(e){e.exports=function(e){return e.reduce((function(e,t){return e+t}))/e.length}},438:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){var r=i.get("gl");return r.brightnessContrast=r.brightnessContrast||new a.default(null,"    uniform sampler2D texture;    uniform float brightness;    uniform float contrast;    varying vec2 texCoord;    void main() {      vec4 color = texture2D(texture, texCoord);      color.rgb += brightness;      if (contrast > 0.0) {        color.rgb = (color.rgb - 0.5) / (1.0 - contrast) + 0.5;      } else {        color.rgb = (color.rgb - 0.5) * (1.0 + contrast) + 0.5;      }      gl_FragColor = color;    }  "),n.simpleShader.call(this,r.brightnessContrast,{brightness:(0,n.clamp)(-1,e,1),contrast:(0,n.clamp)(-1,t,1)}),this};var o,a=(o=r(463))&&o.__esModule?o:{default:o},n=r(649),i=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(423))},411:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,r){var o=i.get("gl");e=(0,n.splineInterpolate)(e),1==arguments.length?t=r=e:(t=(0,n.splineInterpolate)(t),r=(0,n.splineInterpolate)(r));for(var l=[],u=0;u<256;u++)l.splice(l.length,0,e[u],t[u],r[u],255);return this._.extraTexture.initFromBytes(256,1,l),this._.extraTexture.use(1),o.curves=o.curves||new a.default(null,"    uniform sampler2D texture;    uniform sampler2D map;    varying vec2 texCoord;    void main() {      vec4 color = texture2D(texture, texCoord);      color.r = texture2D(map, vec2(color.r)).r;      color.g = texture2D(map, vec2(color.g)).g;      color.b = texture2D(map, vec2(color.b)).b;      gl_FragColor = color;    }  "),o.curves.textures({map:1}),n.simpleShader.call(this,o.curves,{}),this};var o,a=(o=r(463))&&o.__esModule?o:{default:o},n=r(649),i=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(423))},693:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=i.get("gl");t.denoise=t.denoise||new a.default(null,"    uniform sampler2D texture;    uniform float exponent;    uniform float strength;    uniform vec2 texSize;    varying vec2 texCoord;    void main() {      vec4 center = texture2D(texture, texCoord);      vec4 color = vec4(0.0);      float total = 0.0;      for (float x = -4.0; x <= 4.0; x += 1.0) {        for (float y = -4.0; y <= 4.0; y += 1.0) {          vec4 sample = texture2D(texture, texCoord + vec2(x, y) / texSize);          float weight = 1.0 - abs(dot(sample.rgb - center.rgb, vec3(0.25)));          weight = pow(weight, exponent);          color += sample * weight;          total += weight;        }      }      gl_FragColor = color / total;    }  ");for(var r=0;r<2;r++)n.simpleShader.call(this,t.denoise,{exponent:Math.max(0,e),texSize:[this.width,this.height]});return this};var o,a=(o=r(463))&&o.__esModule?o:{default:o},n=r(649),i=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(423))},882:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){var r=i.get("gl");return r.hueSaturation=r.hueSaturation||new a.default(null,"    uniform sampler2D texture;    uniform float hue;    uniform float saturation;    varying vec2 texCoord;    void main() {      vec4 color = texture2D(texture, texCoord);            /* hue adjustment, wolfram alpha: RotationTransform[angle, {1, 1, 1}][{x, y, z}] */      float angle = hue * 3.14159265;      float s = sin(angle), c = cos(angle);      vec3 weights = (vec3(2.0 * c, -sqrt(3.0) * s - c, sqrt(3.0) * s - c) + 1.0) / 3.0;      float len = length(color.rgb);      color.rgb = vec3(        dot(color.rgb, weights.xyz),        dot(color.rgb, weights.zxy),        dot(color.rgb, weights.yzx)      );            /* saturation adjustment */      float average = (color.r + color.g + color.b) / 3.0;      if (saturation > 0.0) {        color.rgb += (average - color.rgb) * (1.0 - 1.0 / (1.001 - saturation));      } else {        color.rgb += (average - color.rgb) * (-saturation);      }            gl_FragColor = color;    }  "),n.simpleShader.call(this,r.hueSaturation,{hue:(0,n.clamp)(-1,e,1),saturation:(0,n.clamp)(-1,t,1)}),this};var o,a=(o=r(463))&&o.__esModule?o:{default:o},n=r(649),i=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(423))},111:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=i.get("gl");return t.noise=t.noise||new a.default(null,"    uniform sampler2D texture;    uniform float amount;    varying vec2 texCoord;    float rand(vec2 co) {      return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);    }    void main() {      vec4 color = texture2D(texture, texCoord);            float diff = (rand(texCoord) - 0.5) * amount;      color.r += diff;      color.g += diff;      color.b += diff;            gl_FragColor = color;    }  "),n.simpleShader.call(this,t.noise,{amount:(0,n.clamp)(0,e,1)}),this};var o,a=(o=r(463))&&o.__esModule?o:{default:o},n=r(649),i=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(423))},538:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=i.get("gl");return t.sepia=t.sepia||new a.default(null,"    uniform sampler2D texture;    uniform float amount;    varying vec2 texCoord;    void main() {      vec4 color = texture2D(texture, texCoord);      float r = color.r;      float g = color.g;      float b = color.b;            color.r = min(1.0, (r * (1.0 - (0.607 * amount))) + (g * (0.769 * amount)) + (b * (0.189 * amount)));      color.g = min(1.0, (r * 0.349 * amount) + (g * (1.0 - (0.314 * amount))) + (b * 0.168 * amount));      color.b = min(1.0, (r * 0.272 * amount) + (g * 0.534 * amount) + (b * (1.0 - (0.869 * amount))));            gl_FragColor = color;    }  "),n.simpleShader.call(this,t.sepia,{amount:(0,n.clamp)(0,e,1)}),this};var o,a=(o=r(463))&&o.__esModule?o:{default:o},n=r(649),i=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(423))},358:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){var r=i.get("gl");return r.unsharpMask=r.unsharpMask||new a.default(null,"    uniform sampler2D blurredTexture;    uniform sampler2D originalTexture;    uniform float strength;    uniform float threshold;    varying vec2 texCoord;    void main() {      vec4 blurred = texture2D(blurredTexture, texCoord);      vec4 original = texture2D(originalTexture, texCoord);      gl_FragColor = mix(blurred, original, 1.0 + strength);    }  "),this._.extraTexture.ensureFormat(this._.texture),this._.texture.use(),this._.extraTexture.drawTo((function(){a.default.getDefaultShader().drawRect()})),this._.extraTexture.use(1),this.triangleBlur(e),r.unsharpMask.textures({originalTexture:1}),n.simpleShader.call(this,r.unsharpMask,{strength:t}),this._.extraTexture.unuse(1),this};var o,a=(o=r(463))&&o.__esModule?o:{default:o},n=r(649),i=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(423))},55:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=i.get("gl");return t.vibrance=t.vibrance||new a.default(null,"    uniform sampler2D texture;    uniform float amount;    varying vec2 texCoord;    void main() {      vec4 color = texture2D(texture, texCoord);      float average = (color.r + color.g + color.b) / 3.0;      float mx = max(color.r, max(color.g, color.b));      float amt = (mx - average) * (-amount * 3.0);      color.rgb = mix(color.rgb, vec3(mx), amt);      gl_FragColor = color;    }  "),n.simpleShader.call(this,t.vibrance,{amount:(0,n.clamp)(-1,e,1)}),this};var o,a=(o=r(463))&&o.__esModule?o:{default:o},n=r(649),i=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(423))},866:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){var r=i.get("gl");return r.vignette=r.vignette||new a.default(null,"    uniform sampler2D texture;    uniform float size;    uniform float amount;    varying vec2 texCoord;    void main() {      vec4 color = texture2D(texture, texCoord);            float dist = distance(texCoord, vec2(0.5, 0.5));      color.rgb *= smoothstep(0.8, size * 0.799, dist * (amount + size));            gl_FragColor = color;    }  "),n.simpleShader.call(this,r.vignette,{size:(0,n.clamp)(0,e,1),amount:(0,n.clamp)(0,t,1)}),this};var o,a=(o=r(463))&&o.__esModule?o:{default:o},n=r(649),i=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(423))},94:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,r){var o=l.get("gl");o.lensBlurPrePass=o.lensBlurPrePass||new a.default(null,"    uniform sampler2D texture;    uniform float power;    varying vec2 texCoord;    void main() {      vec4 color = texture2D(texture, texCoord);      color = pow(color, vec4(power));      gl_FragColor = vec4(color);    }  ");var u="    uniform sampler2D texture0;    uniform sampler2D texture1;    uniform vec2 delta0;    uniform vec2 delta1;    uniform float power;    varying vec2 texCoord;    "+i.randomShaderFunc+"    vec4 sample(vec2 delta) {      /* randomize the lookup values to hide the fixed number of samples */      float offset = random(vec3(delta, 151.7182), 0.0);            vec4 color = vec4(0.0);      float total = 0.0;      for (float t = 0.0; t <= 30.0; t++) {        float percent = (t + offset) / 30.0;        color += texture2D(texture0, texCoord + delta * percent);        total += 1.0;      }      return color / total;    }  ";o.lensBlur0=o.lensBlur0||new a.default(null,u+"    void main() {      gl_FragColor = sample(delta0);    }  "),o.lensBlur1=o.lensBlur1||new a.default(null,u+"    void main() {      gl_FragColor = (sample(delta0) + sample(delta1)) * 0.5;    }  "),o.lensBlur2=o.lensBlur2||new a.default(null,u+"    void main() {      vec4 color = (sample(delta0) + 2.0 * texture2D(texture1, texCoord)) / 3.0;      gl_FragColor = pow(color, vec4(power));    }  ").textures({texture1:1});for(var c=[],s=0;s<3;s++){var f=r+s*Math.PI*2/3;c.push([e*Math.sin(f)/this.width,e*Math.cos(f)/this.height])}var d=Math.pow(10,(0,n.clamp)(-1,t,1));return n.simpleShader.call(this,o.lensBlurPrePass,{power:d}),this._.extraTexture.ensureFormat(this._.texture),n.simpleShader.call(this,o.lensBlur0,{delta0:c[0]},this._.texture,this._.extraTexture),n.simpleShader.call(this,o.lensBlur1,{delta0:c[1],delta1:c[2]},this._.extraTexture,this._.extraTexture),n.simpleShader.call(this,o.lensBlur0,{delta0:c[1]}),this._.extraTexture.use(1),n.simpleShader.call(this,o.lensBlur2,{power:1/d,delta0:c[2]}),this};var o,a=(o=r(463))&&o.__esModule?o:{default:o},n=r(649),i=r(177),l=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(423))},719:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,r,o,u,c){var s=l.get("gl");s.tiltShift=s.tiltShift||new a.default(null,"    uniform sampler2D texture;    uniform float blurRadius;    uniform float gradientRadius;    uniform vec2 start;    uniform vec2 end;    uniform vec2 delta;    uniform vec2 texSize;    varying vec2 texCoord;    "+i.randomShaderFunc+"    void main() {      vec4 color = vec4(0.0);      float total = 0.0;            /* randomize the lookup values to hide the fixed number of samples */      float offset = random(vec3(12.9898, 78.233, 151.7182), 0.0);            vec2 normal = normalize(vec2(start.y - end.y, end.x - start.x));      float radius = smoothstep(0.0, 1.0, abs(dot(texCoord * texSize - start, normal)) / gradientRadius) * blurRadius;      for (float t = -30.0; t <= 30.0; t++) {        float percent = (t + offset - 0.5) / 30.0;        float weight = 1.0 - abs(percent);        vec4 sample = texture2D(texture, texCoord + delta / texSize * percent * radius);                /* switch to pre-multiplied alpha to correctly blur transparent images */        sample.rgb *= sample.a;                color += sample * weight;        total += weight;      }            gl_FragColor = color / total;            /* switch back from pre-multiplied alpha */      gl_FragColor.rgb /= gl_FragColor.a + 0.00001;    }  ");var f=r-e,d=o-t,h=Math.sqrt(f*f+d*d);return n.simpleShader.call(this,s.tiltShift,{blurRadius:u,gradientRadius:c,start:[e,t],end:[r,o],delta:[f/h,d/h],texSize:[this.width,this.height]}),n.simpleShader.call(this,s.tiltShift,{blurRadius:u,gradientRadius:c,start:[e,t],end:[r,o],delta:[-d/h,f/h],texSize:[this.width,this.height]}),this};var o,a=(o=r(463))&&o.__esModule?o:{default:o},n=r(649),i=r(177),l=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(423))},34:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=l.get("gl");return t.triangleBlur=t.triangleBlur||new a.default(null,"    uniform sampler2D texture;    uniform vec2 delta;    varying vec2 texCoord;    "+i.randomShaderFunc+"    void main() {      vec4 color = vec4(0.0);      float total = 0.0;            /* randomize the lookup values to hide the fixed number of samples */      float offset = random(vec3(12.9898, 78.233, 151.7182), 0.0);            for (float t = -30.0; t <= 30.0; t++) {        float percent = (t + offset - 0.5) / 30.0;        float weight = 1.0 - abs(percent);        vec4 sample = texture2D(texture, texCoord + delta * percent);                /* switch to pre-multiplied alpha to correctly blur transparent images */        sample.rgb *= sample.a;                color += sample * weight;        total += weight;      }            gl_FragColor = color / total;            /* switch back from pre-multiplied alpha */      gl_FragColor.rgb /= gl_FragColor.a + 0.00001;    }  "),n.simpleShader.call(this,t.triangleBlur,{delta:[e/this.width,0]}),n.simpleShader.call(this,t.triangleBlur,{delta:[0,e/this.height]}),this};var o,a=(o=r(463))&&o.__esModule?o:{default:o},n=r(649),i=r(177),l=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(423))},449:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,r){var o=l.get("gl");return o.zoomBlur=o.zoomBlur||new a.default(null,"    uniform sampler2D texture;    uniform vec2 center;    uniform float strength;    uniform vec2 texSize;    varying vec2 texCoord;    "+i.randomShaderFunc+"    void main() {      vec4 color = vec4(0.0);      float total = 0.0;      vec2 toCenter = center - texCoord * texSize;            /* randomize the lookup values to hide the fixed number of samples */      float offset = random(vec3(12.9898, 78.233, 151.7182), 0.0);            for (float t = 0.0; t <= 40.0; t++) {        float percent = (t + offset) / 40.0;        float weight = 4.0 * (percent - percent * percent);        vec4 sample = texture2D(texture, texCoord + toCenter * percent * strength / texSize);                /* switch to pre-multiplied alpha to correctly blur transparent images */        sample.rgb *= sample.a;                color += sample * weight;        total += weight;      }            gl_FragColor = color / total;            /* switch back from pre-multiplied alpha */      gl_FragColor.rgb /= gl_FragColor.a + 0.00001;    }  "),n.simpleShader.call(this,o.zoomBlur,{center:[e,t],strength:r,texSize:[this.width,this.height]}),this};var o,a=(o=r(463))&&o.__esModule?o:{default:o},n=r(649),i=r(177),l=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(423))},177:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.randomShaderFunc=void 0,t.warpShader=function(e,t){return new a.default(null,e+"    uniform sampler2D texture;    uniform vec2 texSize;    varying vec2 texCoord;    void main() {      vec2 coord = texCoord * texSize;      "+t+"      gl_FragColor = texture2D(texture, coord / texSize);      vec2 clampedCoord = clamp(coord, vec2(0.0), texSize);      if (coord != clampedCoord) {        /* fade to transparent if we are outside the image */        gl_FragColor.a *= max(0.0, 1.0 - length(coord - clampedCoord));      }    }")};var o,a=(o=r(463))&&o.__esModule?o:{default:o};t.randomShaderFunc="  float random(vec3 scale, float seed) {    /* use the fragment position for a different seed per-pixel */    return fract(sin(dot(gl_FragCoord.xyz + seed, scale)) * 43758.5453 + seed);  }"},914:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,r,o){var l=i.get("gl");return l.colorHalftone=l.colorHalftone||new a.default(null,"    uniform sampler2D texture;    uniform vec2 center;    uniform float angle;    uniform float scale;    uniform vec2 texSize;    varying vec2 texCoord;        float pattern(float angle) {      float s = sin(angle), c = cos(angle);      vec2 tex = texCoord * texSize - center;      vec2 point = vec2(        c * tex.x - s * tex.y,        s * tex.x + c * tex.y      ) * scale;      return (sin(point.x) * sin(point.y)) * 4.0;    }        void main() {      vec4 color = texture2D(texture, texCoord);      vec3 cmy = 1.0 - color.rgb;      float k = min(cmy.x, min(cmy.y, cmy.z));      cmy = (cmy - k) / (1.0 - k);      cmy = clamp(cmy * 10.0 - 3.0 + vec3(pattern(angle + 0.26179), pattern(angle + 1.30899), pattern(angle)), 0.0, 1.0);      k = clamp(k * 10.0 - 5.0 + pattern(angle + 0.78539), 0.0, 1.0);      gl_FragColor = vec4(1.0 - cmy - k, color.a);    }  "),n.simpleShader.call(this,l.colorHalftone,{center:[e,t],angle:r,scale:Math.PI/o,texSize:[this.width,this.height]}),this};var o,a=(o=r(463))&&o.__esModule?o:{default:o},n=r(649),i=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(423))},455:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,r,o){var l=i.get("gl");return l.dotScreen=l.dotScreen||new a.default(null,"    uniform sampler2D texture;    uniform vec2 center;    uniform float angle;    uniform float scale;    uniform vec2 texSize;    varying vec2 texCoord;        float pattern() {      float s = sin(angle), c = cos(angle);      vec2 tex = texCoord * texSize - center;      vec2 point = vec2(        c * tex.x - s * tex.y,        s * tex.x + c * tex.y      ) * scale;      return (sin(point.x) * sin(point.y)) * 4.0;    }        void main() {      vec4 color = texture2D(texture, texCoord);      float average = (color.r + color.g + color.b) / 3.0;      gl_FragColor = vec4(vec3(average * 10.0 - 5.0 + pattern()), color.a);    }  "),n.simpleShader.call(this,l.dotScreen,{center:[e,t],angle:r,scale:Math.PI/o,texSize:[this.width,this.height]}),this};var o,a=(o=r(463))&&o.__esModule?o:{default:o},n=r(649),i=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(423))},739:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=l.get("gl");return t.edgeWork1=t.edgeWork1||new a.default(null,"    uniform sampler2D texture;    uniform vec2 delta;    varying vec2 texCoord;    "+i.randomShaderFunc+"    void main() {      vec2 color = vec2(0.0);      vec2 total = vec2(0.0);            /* randomize the lookup values to hide the fixed number of samples */      float offset = random(vec3(12.9898, 78.233, 151.7182), 0.0);            for (float t = -30.0; t <= 30.0; t++) {        float percent = (t + offset - 0.5) / 30.0;        float weight = 1.0 - abs(percent);        vec3 sample = texture2D(texture, texCoord + delta * percent).rgb;        float average = (sample.r + sample.g + sample.b) / 3.0;        color.x += average * weight;        total.x += weight;        if (abs(t) < 15.0) {          weight = weight * 2.0 - 1.0;          color.y += average * weight;          total.y += weight;        }      }      gl_FragColor = vec4(color / total, 0.0, 1.0);    }  "),t.edgeWork2=t.edgeWork2||new a.default(null,"    uniform sampler2D texture;    uniform vec2 delta;    varying vec2 texCoord;    "+i.randomShaderFunc+"    void main() {      vec2 color = vec2(0.0);      vec2 total = vec2(0.0);            /* randomize the lookup values to hide the fixed number of samples */      float offset = random(vec3(12.9898, 78.233, 151.7182), 0.0);            for (float t = -30.0; t <= 30.0; t++) {        float percent = (t + offset - 0.5) / 30.0;        float weight = 1.0 - abs(percent);        vec2 sample = texture2D(texture, texCoord + delta * percent).xy;        color.x += sample.x * weight;        total.x += weight;        if (abs(t) < 15.0) {          weight = weight * 2.0 - 1.0;          color.y += sample.y * weight;          total.y += weight;        }      }      float c = clamp(10000.0 * (color.y / total.y - color.x / total.x) + 0.5, 0.0, 1.0);      gl_FragColor = vec4(c, c, c, 1.0);    }  "),n.simpleShader.call(this,t.edgeWork1,{delta:[e/this.width,0]}),n.simpleShader.call(this,t.edgeWork2,{delta:[0,e/this.height]}),this};var o,a=(o=r(463))&&o.__esModule?o:{default:o},n=r(649),i=r(177),l=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(423))},564:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,r){var o=i.get("gl");return o.hexagonalPixelate=o.hexagonalPixelate||new a.default(null,"    uniform sampler2D texture;    uniform vec2 center;    uniform float scale;    uniform vec2 texSize;    varying vec2 texCoord;    void main() {      vec2 tex = (texCoord * texSize - center) / scale;      tex.y /= 0.866025404;      tex.x -= tex.y * 0.5;            vec2 a;      if (tex.x + tex.y - floor(tex.x) - floor(tex.y) < 1.0) a = vec2(floor(tex.x), floor(tex.y));      else a = vec2(ceil(tex.x), ceil(tex.y));      vec2 b = vec2(ceil(tex.x), floor(tex.y));      vec2 c = vec2(floor(tex.x), ceil(tex.y));            vec3 TEX = vec3(tex.x, tex.y, 1.0 - tex.x - tex.y);      vec3 A = vec3(a.x, a.y, 1.0 - a.x - a.y);      vec3 B = vec3(b.x, b.y, 1.0 - b.x - b.y);      vec3 C = vec3(c.x, c.y, 1.0 - c.x - c.y);            float alen = length(TEX - A);      float blen = length(TEX - B);      float clen = length(TEX - C);            vec2 choice;      if (alen < blen) {        if (alen < clen) choice = a;        else choice = c;      } else {        if (blen < clen) choice = b;        else choice = c;      }            choice.x += choice.y * 0.5;      choice.y *= 0.866025404;      choice *= scale / texSize;      gl_FragColor = texture2D(texture, choice + center / texSize);    }  "),n.simpleShader.call(this,o.hexagonalPixelate,{center:[e,t],scale:r,texSize:[this.width,this.height]}),this};var o,a=(o=r(463))&&o.__esModule?o:{default:o},n=r(649),i=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(423))},391:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=i.get("gl");return t.ink=t.ink||new a.default(null,"    uniform sampler2D texture;    uniform float strength;    uniform vec2 texSize;    varying vec2 texCoord;    void main() {      vec2 dx = vec2(1.0 / texSize.x, 0.0);      vec2 dy = vec2(0.0, 1.0 / texSize.y);      vec4 color = texture2D(texture, texCoord);      float bigTotal = 0.0;      float smallTotal = 0.0;      vec3 bigAverage = vec3(0.0);      vec3 smallAverage = vec3(0.0);      for (float x = -2.0; x <= 2.0; x += 1.0) {        for (float y = -2.0; y <= 2.0; y += 1.0) {          vec3 sample = texture2D(texture, texCoord + dx * x + dy * y).rgb;          bigAverage += sample;          bigTotal += 1.0;          if (abs(x) + abs(y) < 2.0) {            smallAverage += sample;            smallTotal += 1.0;          }        }      }      vec3 edge = max(vec3(0.0), bigAverage / bigTotal - smallAverage / smallTotal);      gl_FragColor = vec4(color.rgb - dot(edge, edge) * strength * 100000.0, color.a);    }  "),n.simpleShader.call(this,t.ink,{strength:e*e*e*e*e,texSize:[this.width,this.height]}),this};var o,a=(o=r(463))&&o.__esModule?o:{default:o},n=r(649),i=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(423))},997:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=r(438);Object.defineProperty(t,"brightnessContrast",{enumerable:!0,get:function(){return C(o).default}});var a=r(411);Object.defineProperty(t,"curves",{enumerable:!0,get:function(){return C(a).default}});var n=r(693);Object.defineProperty(t,"denoise",{enumerable:!0,get:function(){return C(n).default}});var i=r(882);Object.defineProperty(t,"hueSaturation",{enumerable:!0,get:function(){return C(i).default}});var l=r(111);Object.defineProperty(t,"noise",{enumerable:!0,get:function(){return C(l).default}});var u=r(538);Object.defineProperty(t,"sepia",{enumerable:!0,get:function(){return C(u).default}});var c=r(358);Object.defineProperty(t,"unsharpMask",{enumerable:!0,get:function(){return C(c).default}});var s=r(55);Object.defineProperty(t,"vibrance",{enumerable:!0,get:function(){return C(s).default}});var f=r(866);Object.defineProperty(t,"vignette",{enumerable:!0,get:function(){return C(f).default}});var d=r(94);Object.defineProperty(t,"lensBlur",{enumerable:!0,get:function(){return C(d).default}});var h=r(719);Object.defineProperty(t,"tiltShift",{enumerable:!0,get:function(){return C(h).default}});var g=r(34);Object.defineProperty(t,"triangleBlur",{enumerable:!0,get:function(){return C(g).default}});var v=r(449);Object.defineProperty(t,"zoomBlur",{enumerable:!0,get:function(){return C(v).default}});var p=r(914);Object.defineProperty(t,"colorHalftone",{enumerable:!0,get:function(){return C(p).default}});var m=r(455);Object.defineProperty(t,"dotScreen",{enumerable:!0,get:function(){return C(m).default}});var x=r(739);Object.defineProperty(t,"edgeWork",{enumerable:!0,get:function(){return C(x).default}});var _=r(564);Object.defineProperty(t,"hexagonalPixelate",{enumerable:!0,get:function(){return C(_).default}});var b=r(391);Object.defineProperty(t,"ink",{enumerable:!0,get:function(){return C(b).default}});var y=r(125);Object.defineProperty(t,"bulgePinch",{enumerable:!0,get:function(){return C(y).default}});var w=r(29);Object.defineProperty(t,"matrixWarp",{enumerable:!0,get:function(){return C(w).default}});var S=r(988);Object.defineProperty(t,"perspective",{enumerable:!0,get:function(){return C(S).default}});var T=r(946);function C(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"swirl",{enumerable:!0,get:function(){return C(T).default}})},125:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,r,i){var l=n.get("gl");return l.bulgePinch=l.bulgePinch||(0,o.warpShader)("    uniform float radius;    uniform float strength;    uniform vec2 center;  ","    coord -= center;    float distance = length(coord);    if (distance < radius) {      float percent = distance / radius;      if (strength > 0.0) {        coord *= mix(1.0, smoothstep(0.0, radius / distance, percent), strength * 0.75);      } else {        coord *= mix(1.0, pow(percent, 1.0 + strength * 0.75) * radius / distance, 1.0 - percent);      }    }    coord += center;  "),a.simpleShader.call(this,l.bulgePinch,{radius:r,strength:(0,a.clamp)(-1,i,1),center:[e,t],texSize:[this.width,this.height]}),this};var o=r(177),a=r(649),n=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(423))},29:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,r){var l=i.get("gl");if(l.matrixWarp=l.matrixWarp||(0,o.warpShader)("    uniform mat3 matrix;    uniform bool useTextureSpace;  ","    if (useTextureSpace) coord = coord / texSize * 2.0 - 1.0;    vec3 warp = matrix * vec3(coord, 1.0);    coord = warp.xy / warp.z;    if (useTextureSpace) coord = (coord * 0.5 + 0.5) * texSize;  "),4==(e=Array.prototype.concat.apply([],e)).length)e=[e[0],e[1],0,e[2],e[3],0,0,0,1];else if(9!=e.length)throw"can only warp with 2x2 or 3x3 matrix";return n.simpleShader.call(this,l.matrixWarp,{matrix:t?(0,a.getInverse)(e):e,texSize:[this.width,this.height],useTextureSpace:0|r}),this};var o=r(177),a=r(343),n=r(649),i=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(423))},988:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){var r=o.getSquareToQuad.apply(null,t),a=o.getSquareToQuad.apply(null,e),n=(0,o.multiply)((0,o.getInverse)(r),a);return this.matrixWarp(n)};var o=r(343)},946:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,r,i){var l=n.get("gl");return l.swirl=l.swirl||(0,o.warpShader)("    uniform float radius;    uniform float angle;    uniform vec2 center;  ","    coord -= center;    float distance = length(coord);    if (distance < radius) {      float percent = (radius - distance) / radius;      float theta = percent * percent * angle;      float s = sin(theta);      float c = cos(theta);      coord = vec2(        coord.x * c - coord.y * s,        coord.x * s + coord.y * c      );    }    coord += center;  "),a.simpleShader.call(this,l.swirl,{radius:r,center:[e,t],angle:i,texSize:[this.width,this.height]}),this};var o=r(177),a=r(649),n=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(423))},982:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.splineInterpolate=void 0;var o=r(649);Object.defineProperty(t,"splineInterpolate",{enumerable:!0,get:function(){return o.splineInterpolate}}),t.canvas=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:document.createElement("canvas");try{a.set({gl:e.getContext("experimental-webgl",{premultipliedAlpha:!1})})}catch(e){a.set({gl:null})}var t=a.get("gl");if(!t)throw"This browser does not support WebGL";return e._={gl:t,isInitialized:!1,texture:null,spareTexture:null,flippedShader:null},e.texture=x(f),e.draw=x(h),e.update=x(g),e.replace=x(v),e.contents=x(p),e.getPixelArray=x(m),e.brightnessContrast=x(l.brightnessContrast),e.hexagonalPixelate=x(l.hexagonalPixelate),e.hueSaturation=x(l.hueSaturation),e.colorHalftone=x(l.colorHalftone),e.triangleBlur=x(l.triangleBlur),e.unsharpMask=x(l.unsharpMask),e.perspective=x(l.perspective),e.matrixWarp=x(l.matrixWarp),e.bulgePinch=x(l.bulgePinch),e.tiltShift=x(l.tiltShift),e.dotScreen=x(l.dotScreen),e.edgeWork=x(l.edgeWork),e.lensBlur=x(l.lensBlur),e.zoomBlur=x(l.zoomBlur),e.noise=x(l.noise),e.denoise=x(l.denoise),e.curves=x(l.curves),e.swirl=x(l.swirl),e.ink=x(l.ink),e.vignette=x(l.vignette),e.vibrance=x(l.vibrance),e.sepia=x(l.sepia),e};var a=c(r(423)),n=u(r(202)),i=u(r(463)),l=c(r(997));function u(e){return e&&e.__esModule?e:{default:e}}function c(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}function s(e){return{_:e,loadContentsOf:function(e){a.set({gl:this._.gl}),this._.loadContentsOf(e)},destroy:function(){a.set({gl:this._.gl}),this._.destroy()}}}function f(e){return s(n.default.fromElement(e))}function d(e,t){var r=a.get("gl"),o=r.UNSIGNED_BYTE;if(r.getExtension("OES_texture_float")&&r.getExtension("OES_texture_float_linear")){var l=new n.default(100,100,r.RGBA,r.FLOAT);try{l.drawTo((function(){o=r.FLOAT}))}catch(e){}l.destroy()}this._.texture&&this._.texture.destroy(),this._.spareTexture&&this._.spareTexture.destroy(),this.width=e,this.height=t,this._.texture=new n.default(e,t,r.RGBA,o),this._.spareTexture=new n.default(e,t,r.RGBA,o),this._.extraTexture=this._.extraTexture||new n.default(0,0,r.RGBA,o),this._.flippedShader=this._.flippedShader||new i.default(null,"    uniform sampler2D texture;    varying vec2 texCoord;    void main() {      gl_FragColor = texture2D(texture, vec2(texCoord.x, 1.0 - texCoord.y));    }  "),this._.isInitialized=!0}function h(e,t,r){return this._.isInitialized&&e._.width==this.width&&e._.height==this.height||d.call(this,t||e._.width,r||e._.height),e._.use(),this._.texture.drawTo((function(){i.default.getDefaultShader().drawRect()})),this}function g(){return this._.texture.use(),this._.flippedShader.drawRect(),this}function v(e){return e.parentNode.insertBefore(this,e),e.parentNode.removeChild(e),this}function p(){var e=a.get("gl"),t=new n.default(this._.texture.width,this._.texture.height,e.RGBA,e.UNSIGNED_BYTE);return this._.texture.use(),t.drawTo((function(){i.default.getDefaultShader().drawRect()})),s(t)}function m(){var e=a.get("gl"),t=this._.texture.width,r=this._.texture.height,o=new Uint8Array(t*r*4);return this._.texture.drawTo((function(){e.readPixels(0,0,t,r,e.RGBA,e.UNSIGNED_BYTE,o)})),o}function x(e){return function(){return a.set({gl:this._.gl}),e.apply(this,arguments)}}},343:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getSquareToQuad=function(e,t,r,o,a,n,i,l){var u=r-a,c=o-n,s=i-a,f=l-n,d=e-r+a-i,h=t-o+n-l,g=u*f-s*c,v=(d*f-s*h)/g,p=(u*h-d*c)/g;return[r-e+v*r,o-t+v*o,v,i-e+p*i,l-t+p*l,p,e,t,1]},t.getInverse=function(e){var t=e[0],r=e[1],o=e[2],a=e[3],n=e[4],i=e[5],l=e[6],u=e[7],c=e[8],s=t*n*c-t*i*u-r*a*c+r*i*l+o*a*u-o*n*l;return[(n*c-i*u)/s,(o*u-r*c)/s,(r*i-o*n)/s,(i*l-a*c)/s,(t*c-o*l)/s,(o*a-t*i)/s,(a*u-n*l)/s,(r*l-t*u)/s,(t*n-r*a)/s]},t.multiply=function(e,t){return[e[0]*t[0]+e[1]*t[3]+e[2]*t[6],e[0]*t[1]+e[1]*t[4]+e[2]*t[7],e[0]*t[2]+e[1]*t[5]+e[2]*t[8],e[3]*t[0]+e[4]*t[3]+e[5]*t[6],e[3]*t[1]+e[4]*t[4]+e[5]*t[7],e[3]*t[2]+e[4]*t[5]+e[5]*t[8],e[6]*t[0]+e[7]*t[3]+e[8]*t[6],e[6]*t[1]+e[7]*t[4]+e[8]*t[7],e[6]*t[2]+e[7]*t[5]+e[8]*t[8]]}},463:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=function(){function e(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(t,r,o){return r&&e(t.prototype,r),o&&e(t,o),t}}(),a=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(423)),n=function(){function e(t,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e);var o=a.get("gl");if(this.vertexAttribute=null,this.texCoordAttribute=null,this.program=o.createProgram(),t=t||"attribute vec2 vertex;attribute vec2 _texCoord;varying vec2 texCoord;void main() {  texCoord = _texCoord;  gl_Position = vec4(vertex * 2.0 - 1.0, 0.0, 1.0);}",r="precision highp float;"+(r=r||"uniform sampler2D texture;varying vec2 texCoord;void main() {  gl_FragColor = texture2D(texture, texCoord);}"),o.attachShader(this.program,l(o.VERTEX_SHADER,t)),o.attachShader(this.program,l(o.FRAGMENT_SHADER,r)),o.linkProgram(this.program),!o.getProgramParameter(this.program,o.LINK_STATUS))throw"link error: "+o.getProgramInfoLog(this.program)}return o(e,null,[{key:"getDefaultShader",value:function(){var t=a.get("gl");return t.defaultShader=t.defaultShader||new e,t.defaultShader}}]),o(e,[{key:"destroy",value:function(){a.get("gl").deleteProgram(this.program),this.program=null}},{key:"uniforms",value:function(e){var t,r=a.get("gl");for(var o in r.useProgram(this.program),e)if(e.hasOwnProperty(o)){var n=r.getUniformLocation(this.program,o);if(null!==n){var l=e[o];if(t=l,"[object Array]"==Object.prototype.toString.call(t))switch(l.length){case 1:r.uniform1fv(n,new Float32Array(l));break;case 2:r.uniform2fv(n,new Float32Array(l));break;case 3:r.uniform3fv(n,new Float32Array(l));break;case 4:r.uniform4fv(n,new Float32Array(l));break;case 9:r.uniformMatrix3fv(n,!1,new Float32Array(l));break;case 16:r.uniformMatrix4fv(n,!1,new Float32Array(l));break;default:throw"dont't know how to load uniform \""+o+'" of length '+l.length}else{if(!i(l))throw'attempted to set uniform "'+o+'" to invalid value '+(l||"undefined").toString();r.uniform1f(n,l)}}}return this}},{key:"textures",value:function(e){var t=a.get("gl");for(var r in t.useProgram(this.program),e)e.hasOwnProperty(r)&&t.uniform1i(t.getUniformLocation(this.program,r),e[r]);return this}},{key:"drawRect",value:function(e,t,r,o){var n=a.get("gl"),i=n.getParameter(n.VIEWPORT);t=void 0!==t?(t-i[1])/i[3]:0,e=void 0!==e?(e-i[0])/i[2]:0,r=void 0!==r?(r-i[0])/i[2]:1,o=void 0!==o?(o-i[1])/i[3]:1,null==n.vertexBuffer&&(n.vertexBuffer=n.createBuffer()),n.bindBuffer(n.ARRAY_BUFFER,n.vertexBuffer),n.bufferData(n.ARRAY_BUFFER,new Float32Array([e,t,e,o,r,t,r,o]),n.STATIC_DRAW),null==n.texCoordBuffer&&(n.texCoordBuffer=n.createBuffer(),n.bindBuffer(n.ARRAY_BUFFER,n.texCoordBuffer),n.bufferData(n.ARRAY_BUFFER,new Float32Array([0,0,0,1,1,0,1,1]),n.STATIC_DRAW)),null==this.vertexAttribute&&(this.vertexAttribute=n.getAttribLocation(this.program,"vertex"),n.enableVertexAttribArray(this.vertexAttribute)),null==this.texCoordAttribute&&(this.texCoordAttribute=n.getAttribLocation(this.program,"_texCoord"),n.enableVertexAttribArray(this.texCoordAttribute)),n.useProgram(this.program),n.bindBuffer(n.ARRAY_BUFFER,n.vertexBuffer),n.vertexAttribPointer(this.vertexAttribute,2,n.FLOAT,!1,0,0),n.bindBuffer(n.ARRAY_BUFFER,n.texCoordBuffer),n.vertexAttribPointer(this.texCoordAttribute,2,n.FLOAT,!1,0,0),n.drawArrays(n.TRIANGLE_STRIP,0,4)}}]),e}();function i(e){return"[object Number]"==Object.prototype.toString.call(e)}function l(e,t){var r=a.get("gl"),o=r.createShader(e);if(r.shaderSource(o,t),r.compileShader(o),!r.getShaderParameter(o,r.COMPILE_STATUS))throw"compile error: "+r.getShaderInfoLog(o);return o}t.default=n},128:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(t,r,o){return r&&e(t.prototype,r),o&&e(t,o),t}}(),o=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e);var r=t.length;this.xa=[],this.ya=[],this.u=[],this.y2=[],t.sort((function(e,t){return e[0]-t[0]}));for(var o=0;o<r;o++)this.xa.push(t[o][0]),this.ya.push(t[o][1]);for(this.u[0]=0,this.y2[0]=0,o=1;o<r-1;++o){var a=this.xa[o+1]-this.xa[o-1],n=(this.xa[o]-this.xa[o-1])/a,i=n*this.y2[o-1]+2;this.y2[o]=(n-1)/i;var l=(this.ya[o+1]-this.ya[o])/(this.xa[o+1]-this.xa[o])-(this.ya[o]-this.ya[o-1])/(this.xa[o]-this.xa[o-1]);this.u[o]=(6*l/a-n*this.u[o-1])/i}for(this.y2[r-1]=0,o=r-2;o>=0;--o)this.y2[o]=this.y2[o]*this.y2[o+1]+this.u[o]}return r(e,[{key:"interpolate",value:function(e){for(var t=0,r=this.ya.length-1;r-t>1;){var o=r+t>>1;this.xa[o]>e?r=o:t=o}var a=this.xa[r]-this.xa[t],n=(this.xa[r]-e)/a,i=(e-this.xa[t])/a;return n*this.ya[t]+i*this.ya[r]+((n*n*n-n)*this.y2[t]+(i*i*i-i)*this.y2[r])*(a*a)/6}}]),e}();t.default=o},423:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.set=function(e){r=Object.assign(r,e)},t.get=function(e){return r[e]};var r={}},202:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o,a=function(){function e(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(t,r,o){return r&&e(t.prototype,r),o&&e(t,o),t}}(),n=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(423)),i=(o=r(463))&&o.__esModule?o:{default:o},l=null,u=function(){function e(t,r,o,a){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e);var i=n.get("gl");this.gl=i,this.id=i.createTexture(),this.width=t,this.height=r,this.format=o,this.type=a,i.bindTexture(i.TEXTURE_2D,this.id),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MAG_FILTER,i.LINEAR),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MIN_FILTER,i.LINEAR),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_S,i.CLAMP_TO_EDGE),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_T,i.CLAMP_TO_EDGE),t&&r&&i.texImage2D(i.TEXTURE_2D,0,this.format,t,r,0,this.format,this.type,null)}return a(e,null,[{key:"fromElement",value:function(t){var r=n.get("gl"),o=new e(0,0,r.RGBA,r.UNSIGNED_BYTE);return o.loadContentsOf(t),o}}]),a(e,[{key:"loadContentsOf",value:function(e){var t=n.get("gl");this.width=e.width||e.videoWidth,this.height=e.height||e.videoHeight,t.bindTexture(t.TEXTURE_2D,this.id),t.texImage2D(t.TEXTURE_2D,0,this.format,this.format,this.type,e)}},{key:"initFromBytes",value:function(e,t,r){var o=n.get("gl");this.width=e,this.height=t,this.format=o.RGBA,this.type=o.UNSIGNED_BYTE,o.bindTexture(o.TEXTURE_2D,this.id),o.texImage2D(o.TEXTURE_2D,0,o.RGBA,e,t,0,o.RGBA,this.type,new Uint8Array(r))}},{key:"destroy",value:function(){n.get("gl").deleteTexture(this.id),this.id=null}},{key:"use",value:function(e){var t=n.get("gl");t.activeTexture(t.TEXTURE0+(e||0)),t.bindTexture(t.TEXTURE_2D,this.id)}},{key:"unuse",value:function(e){var t=n.get("gl");t.activeTexture(t.TEXTURE0+(e||0)),t.bindTexture(t.TEXTURE_2D,null)}},{key:"ensureFormat",value:function(e,t,r,o){if(1==arguments.length){var a=arguments[0];e=a.width,t=a.height,r=a.format,o=a.type}if(e!=this.width||t!=this.height||r!=this.format||o!=this.type){var i=n.get("gl");this.width=e,this.height=t,this.format=r,this.type=o,i.bindTexture(i.TEXTURE_2D,this.id),i.texImage2D(i.TEXTURE_2D,0,this.format,e,t,0,this.format,this.type,null)}}},{key:"drawTo",value:function(e){var t=n.get("gl");if(t.framebuffer=t.framebuffer||t.createFramebuffer(),t.bindFramebuffer(t.FRAMEBUFFER,t.framebuffer),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,this.id,0),t.checkFramebufferStatus(t.FRAMEBUFFER)!==t.FRAMEBUFFER_COMPLETE)throw new Error("incomplete framebuffer");t.viewport(0,0,this.width,this.height),e(),t.bindFramebuffer(t.FRAMEBUFFER,null)}},{key:"fillUsingCanvas",value:function(e){e(c(this));var t=n.get("gl");return this.format=t.RGBA,this.type=t.UNSIGNED_BYTE,t.bindTexture(t.TEXTURE_2D,this.id),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,l),this}},{key:"toImage",value:function(e){this.use(),i.default.getDefaultShader().drawRect();var t=n.get("gl"),r=this.width*this.height*4,o=new Uint8Array(r),a=c(this),u=a.createImageData(this.width,this.height);t.readPixels(0,0,this.width,this.height,t.RGBA,t.UNSIGNED_BYTE,o);for(var s=0;s<r;s++)u.data[s]=o[s];a.putImageData(u,0,0),e.src=l.toDataURL()}},{key:"swapWith",value:function(e){var t;t=e.id,e.id=this.id,this.id=t,t=e.width,e.width=this.width,this.width=t,t=e.height,e.height=this.height,this.height=t,t=e.format,e.format=this.format,this.format=t}}]),e}();function c(e){null==l&&(l=document.createElement("canvas")),l.width=e.width,l.height=e.height;var t=l.getContext("2d");return t.clearRect(0,0,l.width,l.height),t}t.default=u},649:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.simpleShader=function(e,t,r,o){(r||this._.texture).use(),this._.spareTexture.drawTo((function(){e.uniforms(t).drawRect()})),this._.spareTexture.swapWith(o||this._.texture)},t.clamp=n,t.splineInterpolate=function(e){for(var t=new a.default(e),r=[],o=0;o<256;o++)r.push(n(0,Math.floor(256*t.interpolate(o/255)),255));return r};var o,a=(o=r(128))&&o.__esModule?o:{default:o};function n(e,t,r){return Math.max(e,Math.min(t,r))}},559:function(e){e.exports={calculateMean:function(e){return e.reduce(((e,t)=>e+t))/e.length},subtractMeanFromElements:function(e,t){let r=[];for(let o in e)r.push(e[o]-t);return r},squareSubtractedElements:function(e){return e.map((e=>Math.pow(e,2)))},addSquaredElements:function(e){return e.reduce(((e,t)=>e+t))},findVariance:function(e,t){let r=t.length;return r-=1,e/r},takeSquareRootOfVariance:function(e){return Math.sqrt(e)},calculateStandardDeviation:function(e){return this.takeSquareRootOfVariance(this.findVariance(this.addSquaredElements(this.squareSubtractedElements(this.subtractMeanFromElements(e,this.calculateMean(e),e))),e))}}}}]);
//# sourceMappingURL=122.27597f5f.js.map